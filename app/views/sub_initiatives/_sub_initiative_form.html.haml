- sub_programs = (form.object.program.load_sub_programs if form.object.program) || []
- initiatives = (form.object.sub_program.load_initiatives if form.object.sub_program) || []
= form.input :name, :label => "Name"
- unless FLUXX_CONFIGURATION[:hide_program]
  = form.input :program_id, :label => I18n.t(:program_name), :as => :select, :collection => Program.all.map{|program| [program.description || program.name, program.id]}, :input_html => {:class => 'program-dropdown-select', 'data-related-child-param' => 'program_id', 'data-related-child' => ".sub-program-select"}
- unless FLUXX_CONFIGURATION[:hide_sub_program]
  = form.input :sub_program_id, :label => I18n.t(:sub_program_name), :as => :select, :collection => sub_programs.map{|sub_program| [sub_program.description || sub_program.name, sub_program.id]}, :input_html => {:class => 'sub-program-select', 'data-related-child-param' => 'sub_program_id', 'data-related-child' => ".initiative-select", 'data-param'.to_sym => 'program_id', 'data-src'.to_sym => sub_programs_path(:format => 'autocomplete')}
- unless FLUXX_CONFIGURATION[:hide_initiative]
  = form.input :initiative_id, :label => I18n.t(:initiative_name), :as => :select, :collection => initiatives.map{|initiative| [initiative.description || initiative.name, initiative.id]}, :input_html => {:class => 'initiative-select', 'data-related-child-param' => 'initiative_id', 'data-param'.to_sym => 'program_id', 'data-src'.to_sym => initiatives_path(:format => 'autocomplete')}
= form.input :retired, :as => :boolean, :label => "Retired:"

= form.commit_button
