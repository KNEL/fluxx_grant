= form.input :grant_program_ids, :required => false, :label => 'Programs', :as => :select, :collection => Program.all.sort_by{|prog| prog.name || ''}.map {|prog|[prog.name, prog.id]}, :input_html => {:class => 'add-another'}
= form.input :grant_sub_program_ids, :label => 'Initiative', :as => :select, :required => false, :collection => Initiative.all.sort_by{|prog| prog.name || ''}.map {|prog|[prog.name, prog.id]}, :input_html => {:class => 'add-another'}
= form.input :request_type, :required => false, :label => 'Request Type:', :as => :select, :collection => [['Grants', GrantRequest.name], ['FIPs', FipRequest.name]], :input_html => {:class => 'add-another'}
= form.input :filter_state, :label => 'Status:', :required => false, :as => :select, :collection => ([:new, :tentatively_due, :actually_due, :paid].map{|state|[RequestTransaction.state_to_english_translation(state), state]}), :input_html => {:class => 'add-another'}
= form.input :due_in_days, :label => 'Due in:', :required => false, :as => :select, :collection => (0..31).map{|num| [num, num]}, :aft => 'Days'
= form.input :overdue_by_days, :label => 'OverDue By:', :required => false, :as => :select, :collection => (0..31).map{|num| [num, num]}, :aft => 'Days'
= form.input :lead_user_ids, :label => 'PO/Lead', :required => false, :as => :select, :collection => Program.all_program_users.map {|user|[user.full_name, user.id]}, :input_html => {:class => 'add-another'}
= render :partial => "request_transactions/more_trans_filter", :locals => { :form => form}
= form.input :favorite_user_ids, :label => 'Marked as Favorite', :required => false, :as => :boolean, :checked_value => (current_user ? current_user.id : nil), :unchecked_value => ''
= form.input :sort_attribute, :label => 'Sort Field', :required => false, :as => :select, :include_blank => nil, :collection => [['Due Date', 'due_at'], ['Amount Due', 'amount_due'], ['Amount Paid', 'amount_paid'], ['Org Name', 'request_org_name']]
= form.input :sort_order, :label => 'Sort Order', :required => false, :as => :select, :include_blank => nil, :collection => [['Descending', 'desc'], ['Ascending', 'asc']]